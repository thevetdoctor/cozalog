{"version":3,"sources":["Input.js","Select.js","data.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","useState","name","setName","nameRef","useRef","useEffect","console","log","type","ref","placeholder","onChange","current","value","required","Select","options","map","item","idx","data","Form","myOptions","split","x","toUpperCase","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAIe,SAASA,EAAMC,GAAQ,IAAD,EACPC,mBAAS,IADF,mBACzBC,EADyB,KACnBC,EADmB,KAE3BC,EAAUC,mBAQhB,OANAC,qBAAU,WACNC,QAAQC,IAAIN,EAAME,KAGnB,CAACF,IAGA,gCACI,gCACKF,EAAME,OAEX,uBACAO,KAAMT,EAAMS,KACZP,KAAMF,EAAME,KACZQ,IAAKN,EACLO,YAAaX,EAAMW,YACnBC,SAAU,kBAAMT,EAAQC,EAAQS,QAAQC,QACxCC,UAAQ,O,MCtBL,SAASC,EAAOhB,GAC3B,OACI,8BACI,iCACKA,EAAMiB,QAAQC,KAAI,SAACC,EAAMC,GAAP,OACf,wBAAkBN,MAAOK,EAAzB,SAAgCA,GAAnBC,UCRjC,IAEeC,EAFD,+UCKC,SAASC,IAEpB,IAAMC,EAAYF,EAAKG,MAAM,KAAKN,KAAI,SAAAO,GAAC,OAAIA,EAAEC,iBAG7C,OAFAnB,QAAQC,IAAIe,GAGR,gCACI,cAAC,EAAD,CACAd,KAAK,OACLP,KAAK,OACLS,YAAY,oBAEZ,cAAC,EAAD,CACAF,KAAK,QACLP,KAAK,QACLS,YAAY,qBAEZ,cAAC,EAAD,CACAF,KAAK,WACLP,KAAK,0BAEL,cAAC,EAAD,CACAO,KAAK,QACLP,KAAK,SAEL,cAAC,EAAD,CACAO,KAAK,QACLP,KAAK,WAEL,cAAC,EAAD,CAAQe,QAASM,O,MCnBdI,MAZf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,4DAIA,cAACN,EAAD,QCESO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7e46393.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './Input.css';\n\n\nexport default function Input(props) {\n    const [ name, setName ] = useState('');\n    const nameRef = useRef();\n\n    useEffect(() => {\n        console.log(name, nameRef);\n        // nameRef.current.focus();\n        // nameRef.current.value = name;\n    }, [name]);\n\n    return (\n        <div>\n            <label>\n                {props.name}\n            </label>\n            <input\n            type={props.type}\n            name={props.name}\n            ref={nameRef}\n            placeholder={props.placeholder}\n            onChange={() => setName(nameRef.current.value)}\n            required\n            />\n        </div>\n    )\n}\n","import React from 'react';\nimport './Select.css';\n\nexport default function Select(props) {\n    return (\n        <div>\n            <select>\n                {props.options.map((item, idx) => (\n                    <option key={idx} value={item}>{item}</option> \n                ))}\n            </select>\n        </div>\n    )\n}\n","const data =  \"academic & communion,avalanche,altar management,bus & traffic,child care,church office,coza experience,coza outreach,facility maintenance,hosts & hostesses,pastoral care,protocol,public relations,sparkles,special duties,special mums outreach,sounds,training & quality control,ushering,welfare,word factory,marriage counselling,media\";\n\nexport default data;","import React from 'react';\nimport Input from './Input';\nimport Select from './Select';\nimport data from './data.js';\n\nexport default function Form() {\n\n    const myOptions = data.split(',').map(x => x.toUpperCase());\n    console.log(myOptions);\n\n    return (\n        <div>\n            <Input\n            type='text'\n            name='Name'\n            placeholder='Enter your name'\n            />\n            <Input\n            type='email'\n            name='Email'\n            placeholder='Enter your email'\n            />           \n            <Input\n            type='checkbox'\n            name='Tick Box (if present)'\n            />           \n            <Input\n            type='radio'\n            name='Male'\n            />\n            <Input\n            type='radio'\n            name='Female'\n            />\n            <Select options={myOptions} />     \n        </div>\n    )\n}\n","import Form from './Form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>\n        Hello , Welcome to COZA!!!\n      </h2> \n\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}